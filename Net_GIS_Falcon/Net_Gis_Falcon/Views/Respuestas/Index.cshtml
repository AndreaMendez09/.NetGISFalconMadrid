@model IEnumerable<Net_Gis_Falcon.Respuestum>

@{
    ViewData["Title"] = "Index";
}
<h1>Árbol de respuestas</h1>
@foreach (var item in Model)
{

    @if (item.Principal == true)
    {
        sacarHijos(item);
    }

}

<h1>El otro árbol</h1>
@foreach (var item in Model)
{

    @if (item.Principal == true)
    {
        sacarPadre(item);
    }

}

<h1>Respuestas</h1>

<p>
    <a asp-action="Create">Crear una nueva respuesta</a>
</p>
<table class="table">
    <thead class="thead-dark">
        <tr>
            <th>Cuerpo de la respuesta </th>
            <th>¿Es principal? </th>
            <th>Nivel</th>
            <th>Respuesta del padre</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.CuerpoRespuesta)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Principal)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NivelNavigation.DescripcionPregunta)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RespuestaPadreNavigation.CuerpoRespuesta)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.IdRespuesta">Editar</a> |
                    <a asp-action="Details" asp-route-id="@item.IdRespuesta">Detalles</a> |
                    <a asp-action="Delete" asp-route-id="@item.IdRespuesta">Eliminar</a>
                </td>
            </tr>
        }
    </tbody>

</table>
@functions{
    void sacarHijos(Respuestum item)
    {
        <ul id="myUL">

            <li class="caret">
                @Html.DisplayFor(modelItem => item.NivelNavigation.DescripcionPregunta)
            </li>
            <ul id="myUL">
                <li class="caret">
                    @Html.DisplayFor(modelItem => item.CuerpoRespuesta)
                </li>
                @if (item != null) { 
                    //sacarHijos(item);
                }
            </ul>
        </ul>

    }

    void sacarPadre(Respuestum item)
    {
        <ul id="myUL">

            @if (item.Principal == true)
            {
                <li class="caret">
                    @Html.DisplayFor(modelItem => item.CuerpoRespuesta)
                </li>
            }

            @if (item.InverseRespuestaPadreNavigation.Count != 0)
            {
                <ul class="nested">
                    @foreach (var hijos in item.InverseRespuestaPadreNavigation)
                    {

                        //Preguntarle por los hijos, de manera recursiva

                        <li class="caret">@Html.DisplayFor(modelItem => hijos.CuerpoRespuesta)</li>

                        sacarPadre(hijos);
                    }
                </ul>
            }


        </ul>
    }
}

