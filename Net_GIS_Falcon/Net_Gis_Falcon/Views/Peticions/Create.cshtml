@model Net_Gis_Falcon.Peticion

@{
    ViewData["Title"] = "Create";
}
<script src="https://cdn.jsdelivr.net/gh/openlayers/openlayers.github.io@master/en/v6.5.0/build/ol.js"></script>

<h1>Crear una nueva peticion</h1>

<h4>Peticion</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="FechaCreacion" class="control-label">Fecha creacion</label>
                <input asp-for="FechaCreacion" class="form-control" />
                <span asp-validation-for="FechaCreacion" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LocalizacionPeticion" class="control-label">Localización</label>
                <input asp-for="LocalizacionPeticion" id="position" class="form-control" />
                <span asp-validation-for="LocalizacionPeticion" class="text-danger"></span>
            </div>
            <label for="track">
                track position
                <input id="track" type="checkbox" />
            </label>
            <div class="form-group">
                <label asp-for="Usuario" class="control-label"></label>
                <select asp-for="Usuario" class="form-control" asp-items="ViewBag.Usuario"></select>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
        <form action="form1" target="_blank">

            <p>
                Respuestas:<br>
                <input type="radio" name="respuesta" value="respuesta1"> respuesta1<br>
                <input type="radio" name="respuesta" value="respuesta2"> respuesta2<br>
                <input type="radio" name="respuesta" value="respuesta3"> respuesta3
            </p>
            <p><input type="button" value="Siguiente"></p>
            <p><input type="button" value="Atras "></p>
        </form>
        <form action="form2" target="_blank">

            <p>
                Respuestas:<br>
                <input type="radio" name="respuesta2" value="respuesta1.1"> respuesta1.1<br>
                <input type="radio" name="respuesta2" value="respuesta2.1"> respuesta2.1<br>
                <input type="radio" name="respuesta2" value="respuesta3.1"> respuesta3.1
            </p>
            <p><input type="button" value="Siguiente"></p>
            <p><input type="button" value="Atras "></p>
        </form>

        <form action="form3" target="_blank">

            <p>
                Respuestas:<br>
                <input type="radio" name="respuesta" value="respuesta1.1.1"> respuesta1.1.1<br>
                <input type="radio" name="respuesta" value="respuesta2.1.1"> respuesta2.1.1<br>
                <input type="radio" name="respuesta" value="respuesta3.1.1"> respuesta3.1.1
            </p>
            <p><input type="button" value="Siguiente"></p>
            <p><input type="button" value="Atras "></p>
        </form>

        <script type="text/javascript">

            function check() {
                var dropdown = document.getElementById("pregunta1");
                var current_value = dropdown.options[dropdown.selectedIndex].value;

                if (current_value == "urgencia1") {
                    document.getElementById("pregunta2").style.display = "block";

                } else {
                    document.getElementById("pregunta2").style.display = "none";
                }
            }

            var view = new ol.View({
                center: [0, 0],
                zoom: 2,
            });

            var map = new ol.Map({
                layers: [
                    new ol.layer.Tile({
                        source: new ol.source.OSM(),
                    })],
                target: 'map',
                view: view,
            });

            var geolocation = new ol.Geolocation({
                // enableHighAccuracy must be set to true to have the heading value.
                trackingOptions: {
                    enableHighAccuracy: true,
                },
                projection: view.getProjection(),
            });

            function el(id) {
                return document.getElementById(id);
            }

            el('track').addEventListener('change', function () {
                geolocation.setTracking(this.checked);
            });

            // update the HTML page when the position changes.
            geolocation.on('change', function () {
                document.getElementById("position").value = geolocation.getPosition();
            });

            // handle geolocation error.
            geolocation.on('error', function (error) {
                var info = document.getElementById('info');
                info.innerHTML = error.message;
                info.style.display = '';
            });

            var accuracyFeature = new ol.Feature();
            geolocation.on('change:accuracyGeometry', function () {
                accuracyFeature.setGeometry(geolocation.getAccuracyGeometry());
            });

            var positionFeature = new ol.Feature();
            positionFeature.setStyle(
                new ol.style.Style({
                    image: new ol.style.Circle({
                        radius: 6,
                        fill: new ol.style.Fill({
                            color: '#3399CC',
                        }),
                        stroke: new ol.style.Stroke({
                            color: '#fff',
                            width: 2,
                        }),
                    }),
                })
            );

            geolocation.on('change:position', function () {
                var coordinates = geolocation.getPosition();
                positionFeature.setGeometry(coordinates ? new ol.geom.Point(coordinates) : null);
            });

            new ol.layer.Vector({
                map: map,
                source: new ol.source.Vector({
                    features: [accuracyFeature, positionFeature],
                }),
            });

        </script>


    </div>
</div>

<div>
    <a asp-action="Index">Volver a la lista</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
